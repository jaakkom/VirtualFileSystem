<?php

declare(strict_types=1);

/*
 * This file is part of Twifty Virtual Filesystem.
 *
 * (c) Owen Parry <waldermort@gmail.com>
 *
 * This source file is subject to the MIT license that is bundled
 * with this source code in the file LICENSE.
 */

namespace Twifty\VirtualFileSystem\Test\Inject;

use PHPUnit\Framework\TestCase;
use Twifty\VirtualFileSystem\Inject\FunctionInjector;
use Twifty\VirtualFileSystem\Inject\InjectableInterface;

/**
 * Test case for FunctionInjector.
 *
 * Generated by twifty-test-generator 0.0.1-beta.1 on 2017-07-17.
 *
 * @author Owen Parry <waldermort@gmail.com>
 */
class FunctionInjectorTest extends TestCase
{
    public function testInject()
    {
        $this->assertFalse(function_exists(__NAMESPACE__.'\\testInject'));

        $proxy = new class($this) implements InjectableInterface {
            private $testCase;

            public function __construct($testCase)
            {
                $this->testCase = $testCase;
            }

            public function __invoke(...$args)
            {
                $this->testCase->assertSame('test string', func_get_arg(0));

                return true;
            }

            public function getName(): string
            {
                return 'testInject';
            }
        };

        $this->assertTrue(FunctionInjector::inject(__NAMESPACE__, $proxy));

        $this->assertTrue(function_exists(__NAMESPACE__.'\\testInject'));
        $this->assertTrue(testInject('test string'));

        $this->assertFalse(FunctionInjector::inject(__NAMESPACE__, $proxy), 'Cannot be injected multiple times');
    }
}
